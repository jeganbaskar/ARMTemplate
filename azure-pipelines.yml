name: $(Version).$(rev:r)
variables:
- template: variables/build.yaml 

trigger:
  branches:
    include:
    - '*'
stages:

- stage: Build
  jobs:
  - job: BuildJob
    pool:
      vmImage: ${{ variables.vmImage }}
    steps:
    - task: AzureResourceManagerTemplateDeployment@3
      displayName: 'ARM Template Valiadation'
      inputs:
        deploymentScope: 'Resource Group'
        ConnectedServiceName: ${{ variables.ConnectedServiceName }}
        subscriptionName: ${{ variables.subscriptionName }}
        action: 'Create Or Update Resource Group'
        resourceGroupName: ${{ variables.RGName }}
        location: ${{ variables.location }}
        templateLocation: 'Linked artifact'
        csmFile: 'Blobstorage/template.json'
        csmParametersFile: 'Blobstorage/parameters.json'
        deploymentMode: 'Validation'
    - task: AzurePowerShell@4
      inputs:
        azureSubscription: ${{ variables.ConnectedServiceName }}
        ScriptType: 'InlineScript'
        Inline: |
          Install-PackageProvider -Name NuGet -Force -Scope CurrentUser
                      Install-Module -Name ARMHelper -Force -Scope CurrentUser
                      Import-Module -Name ARMHelper
                      Test-ARMExistingResource -ResourceGroupName ${{ variables.RGName }} -TemplateFile "$(Build.SourcesDirectory)/Blobstorage/template.json" -TemplateParameterFile "$(Build.SourcesDirectory)/Blobstorage/parameters.json" -Mode Complete
        FailOnStandardError: true
        azurePowerShellVersion: 'LatestVersion'
- stage: SchemaBuild
  jobs:
  - job: BuildJob
    pool:
      vmImage: ${{ variables.vmImage }}
      steps:
      - task: Maven@3
        displayName: 'Maven Build'
        inputs:
          mavenPomFile: '$(Parameters.mavenPOMFile)'
          goals: 'clean install -s settings.xml'
          testResultsFiles: '**/surefire-reports/TEST-*.xml'
          publishJUnitResults: true
          testRunTitle: '$(Build.DefinitionName)'
          codeCoverageToolOption: JaCoCo
      - task: CopyFiles@2
        displayName: 'Copy Files to: $(build.artifactstagingdirectory)'
        inputs:
          SourceFolder: '$(system.defaultworkingdirectory)'
          Contents: '**/*.jar'
          TargetFolder: '$(build.artifactstagingdirectory)'
          enabled: true
          timeoutInMinutes: 0
        condition: succeededOrFailed()

      - task: PublishBuildArtifacts@1
        displayName: 'Publish Artifact: R1-osdu-platform-$(Build.DefinitionName)'
        inputs:
          PathtoPublish: '$(build.artifactstagingdirectory)'
          ArtifactName: 'R1-osdu-platform-schema'
        condition: succeededOrFailed()
- stage: Deploy
  jobs:
  - job: BuildJob
    pool:
      vmImage: ${{ variables.vmImage }}
    steps:
    - task: AzureResourceManagerTemplateDeployment@3
      displayName: 'Azure Deployment:Create Or Update Resource Group action on OC-DC'
      inputs:
       deploymentScope: 'Resource Group'
       ConnectedServiceName: ${{ variables.ConnectedServiceName }}
       subscriptionName:  ${{ variables.subscriptionName }}
       action: 'Create Or Update Resource Group'
       resourceGroupName: ${{ variables.RGName }}
       location: ${{ variables.location }}
       templateLocation: 'Linked artifact'
       csmFile: 'Blobstorage/template.json'
       csmParametersFile: 'Blobstorage/parameters.json'
       deploymentMode: 'Incremental'